// Gradle script to build Android native libraries

plugins {
    id 'com.android.library' version '7.4.0'
}

String flavor = 'Sp'
if (project.hasProperty('flavor')) {
    flavor = project.ext.flavor
}

android {
    buildTypes.debug {
        jniDebuggable = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30
        ndk {
            //abiFilters 'x86_64'
        }
    }
    externalNativeBuild.ndkBuild {
        path 'Android.mk'
    }
    namespace 'com.github.stephengold.libbulletjme'
    ndkVersion '23.1.7779620'
}

dependencies {
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

tasks.register('copyToDist') {}
def archmap = [ 'ARM7' : 'armeabi-v7a', \
                'ARM8' : 'arm64-v8a', \
                'X86' : 'x86', \
                'X86_64' : 'x86_64' ]
def btmap = [ 'Debug' : 'merged_native_libs/debug', \
              'Release' : 'stripped_native_libs/release' ]
archmap.each { arch ->
    btmap.each { bt ->
        String q = arch.key + bt.key + flavor
        String so = bt.value + "/out/lib/${arch.value}/libbulletjme.so"
        def sharedLibraryFile = file('build/intermediates/' + so)
        copyToDist.dependsOn('copyToDist_' + q)
        tasks.register('copyToDist_' + q, Copy) {
            dependsOn 'assemble' + bt.key
            from sharedLibraryFile
            rename { return 'Android_' + q + '_libbulletjme.so' }
            into 'dist'
        }
    }
}

// Register cleanup tasks:

clean.dependsOn('cleanCxx', 'cleanDist')

tasks.register('cleanCxx', Delete) {
    delete '.cxx'
}
tasks.register('cleanDist', Delete) { // files to be distributed
    delete 'dist'
}
